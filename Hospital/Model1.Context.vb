'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class ProyectoEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=ProyectoEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Citas() As DbSet(Of Citas)
    Public Overridable Property ConsultaMedica() As DbSet(Of ConsultaMedica)
    Public Overridable Property Enfermedad() As DbSet(Of Enfermedad)
    Public Overridable Property ExamenOrina() As DbSet(Of ExamenOrina)
    Public Overridable Property ExamenSangre() As DbSet(Of ExamenSangre)
    Public Overridable Property MedicamentoAlergico() As DbSet(Of MedicamentoAlergico)
    Public Overridable Property MedicamentoRecetado() As DbSet(Of MedicamentoRecetado)
    Public Overridable Property Medico() As DbSet(Of Medico)
    Public Overridable Property Paciente() As DbSet(Of Paciente)
    Public Overridable Property PersonaContacto() As DbSet(Of PersonaContacto)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Overridable Property Usuarios() As DbSet(Of Usuarios)

    Public Overridable Function sp_buscar_enfermedad(id As Nullable(Of Integer)) As ObjectResult(Of sp_buscar_enfermedad_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_buscar_enfermedad_Result)("sp_buscar_enfermedad", idParameter)
    End Function

    Public Overridable Function sp_buscar_paciente(cedula As Nullable(Of Integer)) As ObjectResult(Of sp_buscar_paciente_Result)
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_buscar_paciente_Result)("sp_buscar_paciente", cedulaParameter)
    End Function

    Public Overridable Function sp_buscar_usuario(cedula As Nullable(Of Integer)) As ObjectResult(Of sp_buscar_usuario_Result)
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_buscar_usuario_Result)("sp_buscar_usuario", cedulaParameter)
    End Function

    Public Overridable Function sp_eliminar_enfermedad(id As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_eliminar_enfermedad", idParameter)
    End Function

    Public Overridable Function sp_eliminar_paciente(cedula As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_eliminar_paciente", cedulaParameter)
    End Function

    Public Overridable Function sp_eliminar_usuario(cedula As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_eliminar_usuario", cedulaParameter)
    End Function

    Public Overridable Function sp_modificar_enfermedad(id As Nullable(Of Integer), enfermedad As String, descripcion As String) As ObjectResult(Of Nullable(Of Integer))
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim enfermedadParameter As ObjectParameter = If(enfermedad IsNot Nothing, New ObjectParameter("enfermedad", enfermedad), New ObjectParameter("enfermedad", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_modificar_enfermedad", idParameter, enfermedadParameter, descripcionParameter)
    End Function

    Public Overridable Function sp_modificar_paciente(cedula As Nullable(Of Integer), nombre As String, edad As Nullable(Of Integer), correo As String, fechaNacimiento As Nullable(Of Date), peso As Nullable(Of Double), altura As Nullable(Of Double), telefono As Nullable(Of Integer), tiposangre As String) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim edadParameter As ObjectParameter = If(edad.HasValue, New ObjectParameter("edad", edad), New ObjectParameter("edad", GetType(Integer)))

        Dim correoParameter As ObjectParameter = If(correo IsNot Nothing, New ObjectParameter("correo", correo), New ObjectParameter("correo", GetType(String)))

        Dim fechaNacimientoParameter As ObjectParameter = If(fechaNacimiento.HasValue, New ObjectParameter("fechaNacimiento", fechaNacimiento), New ObjectParameter("fechaNacimiento", GetType(Date)))

        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("peso", peso), New ObjectParameter("peso", GetType(Double)))

        Dim alturaParameter As ObjectParameter = If(altura.HasValue, New ObjectParameter("altura", altura), New ObjectParameter("altura", GetType(Double)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(Integer)))

        Dim tiposangreParameter As ObjectParameter = If(tiposangre IsNot Nothing, New ObjectParameter("tiposangre", tiposangre), New ObjectParameter("tiposangre", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_modificar_paciente", cedulaParameter, nombreParameter, edadParameter, correoParameter, fechaNacimientoParameter, pesoParameter, alturaParameter, telefonoParameter, tiposangreParameter)
    End Function

    Public Overridable Function sp_modificar_usuario(cedula As Nullable(Of Integer), contraseña As String, correo As String, fechaNacimiento As Nullable(Of Date), nombre As String, nombreUsuario As String, telefono As String, tipo As String) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("contraseña", contraseña), New ObjectParameter("contraseña", GetType(String)))

        Dim correoParameter As ObjectParameter = If(correo IsNot Nothing, New ObjectParameter("correo", correo), New ObjectParameter("correo", GetType(String)))

        Dim fechaNacimientoParameter As ObjectParameter = If(fechaNacimiento.HasValue, New ObjectParameter("fechaNacimiento", fechaNacimiento), New ObjectParameter("fechaNacimiento", GetType(Date)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim nombreUsuarioParameter As ObjectParameter = If(nombreUsuario IsNot Nothing, New ObjectParameter("nombreUsuario", nombreUsuario), New ObjectParameter("nombreUsuario", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_modificar_usuario", cedulaParameter, contraseñaParameter, correoParameter, fechaNacimientoParameter, nombreParameter, nombreUsuarioParameter, telefonoParameter, tipoParameter)
    End Function

    Public Overridable Function sp_registrar_enfermedad(cedulaPaciente As Nullable(Of Integer), enfermedad As String, descripcion As String) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaPacienteParameter As ObjectParameter = If(cedulaPaciente.HasValue, New ObjectParameter("cedulaPaciente", cedulaPaciente), New ObjectParameter("cedulaPaciente", GetType(Integer)))

        Dim enfermedadParameter As ObjectParameter = If(enfermedad IsNot Nothing, New ObjectParameter("enfermedad", enfermedad), New ObjectParameter("enfermedad", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("descripcion", descripcion), New ObjectParameter("descripcion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_registrar_enfermedad", cedulaPacienteParameter, enfermedadParameter, descripcionParameter)
    End Function

    Public Overridable Function sp_registrar_paciente(cedula As Nullable(Of Integer), nombre As String, edad As Nullable(Of Integer), correo As String, fechaNacimiento As Nullable(Of Date), peso As Nullable(Of Double), altura As Nullable(Of Double), telefono As Nullable(Of Integer), tiposangre As String) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim edadParameter As ObjectParameter = If(edad.HasValue, New ObjectParameter("edad", edad), New ObjectParameter("edad", GetType(Integer)))

        Dim correoParameter As ObjectParameter = If(correo IsNot Nothing, New ObjectParameter("correo", correo), New ObjectParameter("correo", GetType(String)))

        Dim fechaNacimientoParameter As ObjectParameter = If(fechaNacimiento.HasValue, New ObjectParameter("fechaNacimiento", fechaNacimiento), New ObjectParameter("fechaNacimiento", GetType(Date)))

        Dim pesoParameter As ObjectParameter = If(peso.HasValue, New ObjectParameter("peso", peso), New ObjectParameter("peso", GetType(Double)))

        Dim alturaParameter As ObjectParameter = If(altura.HasValue, New ObjectParameter("altura", altura), New ObjectParameter("altura", GetType(Double)))

        Dim telefonoParameter As ObjectParameter = If(telefono.HasValue, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(Integer)))

        Dim tiposangreParameter As ObjectParameter = If(tiposangre IsNot Nothing, New ObjectParameter("tiposangre", tiposangre), New ObjectParameter("tiposangre", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_registrar_paciente", cedulaParameter, nombreParameter, edadParameter, correoParameter, fechaNacimientoParameter, pesoParameter, alturaParameter, telefonoParameter, tiposangreParameter)
    End Function

    Public Overridable Function sp_registrar_usuario(cedula As Nullable(Of Integer), contraseña As String, correo As String, fechaNacimiento As Nullable(Of Date), nombre As String, nombreUsuario As String, telefono As String, tipo As String) As ObjectResult(Of Nullable(Of Integer))
        Dim cedulaParameter As ObjectParameter = If(cedula.HasValue, New ObjectParameter("cedula", cedula), New ObjectParameter("cedula", GetType(Integer)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("contraseña", contraseña), New ObjectParameter("contraseña", GetType(String)))

        Dim correoParameter As ObjectParameter = If(correo IsNot Nothing, New ObjectParameter("correo", correo), New ObjectParameter("correo", GetType(String)))

        Dim fechaNacimientoParameter As ObjectParameter = If(fechaNacimiento.HasValue, New ObjectParameter("fechaNacimiento", fechaNacimiento), New ObjectParameter("fechaNacimiento", GetType(Date)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim nombreUsuarioParameter As ObjectParameter = If(nombreUsuario IsNot Nothing, New ObjectParameter("nombreUsuario", nombreUsuario), New ObjectParameter("nombreUsuario", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("telefono", telefono), New ObjectParameter("telefono", GetType(String)))

        Dim tipoParameter As ObjectParameter = If(tipo IsNot Nothing, New ObjectParameter("tipo", tipo), New ObjectParameter("tipo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("sp_registrar_usuario", cedulaParameter, contraseñaParameter, correoParameter, fechaNacimientoParameter, nombreParameter, nombreUsuarioParameter, telefonoParameter, tipoParameter)
    End Function

End Class
